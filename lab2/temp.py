from ortools.linear_solver import pywraplp


def create_data_model():
    """Create the data for the example."""
    data = {}
    weights1 = [98, 50, 98, 49, 98, 49, 96, 49, 96, 47, 94, 55, 93, 57, 93, 57, 92, 58, 91, 59, 91, 58,
               90, 60, 87, 62, 86, 64, 85, 62, 85, 60, 84, 66, 84, 58, 84, 57, 84, 57, 84, 55, 83, 67,
               83, 55, 82, 46, 20, 82, 45, 23, 81, 69, 80, 70, 80, 70, 80, 70, 79, 71, 79, 69, 78, 72,
               78, 69, 78, 46, 26, 78, 45, 27, 76, 74, 74, 73, 73, 44, 33, 73, 44, 33, 73, 43, 33, 43, 43, 41, 23,
               43, 42, 41, 24, 42, 42, 41, 25, 42, 42, 39, 27, 39, 38, 38, 35, 38, 37, 36, 36, 36, 32, 32, 30, 30,
               30, 29, 28, 25] #'''
    weights2 = [100, 50, 100, 49, 99, 49, 99, 48, 98, 52, 98, 52, 98, 48, 98, 47, 98, 47, 97, 53, 97, 53, 97, 53,
               95, 55, 95, 55, 95, 53, 94, 53, 92, 58, 90, 60, 90, 60, 88, 62, 88, 61, 85, 65, 82, 68, 81, 67,
               81, 67, 81, 67, 80, 70, 80, 70, 80, 70, 79, 71, 79, 67, 78, 72, 78, 72, 76, 74, 75, 75, 66, 66,
               65, 64, 20, 61, 60, 29, 59, 57, 33, 57, 57, 36, 53, 47, 46, 46, 45, 45, 45, 44, 43, 43, 43, 41,
               23, 39, 39, 39, 32, 38, 38, 37, 36, 36, 35, 30, 30, 29, 27, 27, 27, 25, 24, 23, 22, 22, 22, 20]
    weights3 = [100, 50, 100, 50, 98, 51, 97, 53, 97, 53, 96, 51, 94, 48, 92, 57, 92, 48, 91, 59, 91, 59, 90, 60,
               90, 48, 90, 47, 88, 62, 85, 65, 84, 66, 84, 66, 84, 66, 83, 67, 81, 69, 81, 69, 80, 70, 80, 68,
               80, 68, 80, 67, 79, 67, 79, 67, 79, 64, 76, 73, 76, 74, 75, 75, 64, 46, 38, 64, 46, 38, 64, 46, 38,
               64, 45, 41, 62, 45, 42, 61, 44, 42, 61, 41, 28, 20, 37, 37, 37, 37, 40, 21, 21, 22, 23, 23, 36, 36,
               24, 24, 30, 35, 25, 34, 26, 29, 34, 26, 33, 27, 29, 32, 28, 31, 29, 29, 35, 32, 32, 31]
    weights4 = [100, 47, 100, 46, 99, 46, 97, 53, 97, 52, 97, 46, 96, 54, 96, 54, 95, 54, 95, 27, 26, 95, 27, 26,
               95, 42, 94, 56, 92, 58, 92, 58, 91, 59, 91, 20, 39, 90, 60, 90, 60, 90, 42, 89, 61, 88, 62, 87,
               63, 87, 63, 86, 63, 86, 24, 37, 85, 65, 84, 66, 84, 34, 32, 84, 37, 28, 83, 67, 82, 68, 82, 33,
               35, 81, 43, 25, 80, 70, 80, 44, 26, 80, 45, 25, 79, 45, 25, 78, 42, 30, 76, 45, 29, 75, 35, 40,
               74, 35, 40, 74, 35, 40, 73, 43, 34, 73, 48, 29, 73, 56, 21, 71, 57, 22, 71, 47, 32, 70, 49, 31]
    weights5 = [99, 50, 99, 50, 98, 52, 98, 52, 97, 53, 97, 49, 96, 48, 95, 55, 92, 57, 92, 57, 92, 57, 92, 57,
               91, 59, 91, 57, 91, 56, 90, 60, 89, 61, 89, 60, 88, 45, 87, 45, 87, 43, 20, 87, 43, 20, 86, 42,
               21, 85, 65, 84, 66, 84, 65, 84, 42, 24, 84, 42, 24, 82, 68, 82, 68, 81, 69, 79, 71, 78, 72, 78,
               71, 77, 73, 77, 73, 76, 74, 76, 73, 75, 75, 75, 73, 71, 71, 70, 69, 69, 69, 69, 67, 42, 42, 41,
               25, 40, 40, 39, 31, 39, 37, 37, 37, 36, 35, 34, 32, 32, 31, 30, 28, 27, 23, 21, 21, 21, 21, 20]
    y1 = [42, 69, 67, 57, 93, 90, 38, 36, 45, 42, 33, 79, 27, 57, 44, 84, 86, 92, 46, 38, 85, 33, 82, 73,
           49, 70, 59, 23, 57, 72, 74, 69, 33, 42, 28, 46, 30, 64, 29, 74, 41, 49, 55, 98, 80, 32, 25, 38,
           82, 30, 35, 39, 57, 84, 62, 50, 55, 27, 30, 36, 20, 78, 47, 26, 45, 41, 58, 98, 91, 96, 73, 84,
           37, 93, 91, 43, 73, 85, 81, 79, 71, 80, 76, 83, 41, 78, 70, 23, 42, 87, 43, 84, 60, 55, 49, 78,
           73, 62, 36, 44, 94, 69, 32, 96, 70, 84, 58, 78, 25, 80, 58, 66, 83, 24, 98, 60, 42, 43, 43, 39]
    y2 = [97, 57, 81, 62, 75, 81, 23, 43, 50, 38, 60, 58, 70, 88, 36, 90, 37, 45, 45, 39, 44, 53, 70, 24,
           82, 81, 47, 97, 35, 65, 74, 68, 49, 55, 52, 94, 95, 29, 99, 20, 22, 25, 49, 46, 98, 59, 98, 60,
           23, 72, 33, 98, 80, 95, 78, 57, 67, 53, 47, 53, 36, 38, 92, 30, 80, 32, 97, 39, 80, 72, 55, 41,
           60, 67, 53, 65, 95, 20, 66, 78, 98, 47, 100, 85, 53, 53, 67, 27, 22, 61, 43, 52, 76, 64, 61, 29,
           30, 46, 79, 66, 27, 79, 98, 90, 22, 75, 57, 67, 36, 70, 99, 48, 43, 45, 71, 100, 88, 48, 27, 39]
    y3 = [38, 100, 60, 42, 20, 69, 24, 23, 92, 32, 84, 36, 65, 84, 34, 68, 64, 33, 69, 27, 47, 21, 85, 88,
           59, 61, 50, 53, 37, 75, 64, 84, 74, 57, 83, 28, 31, 97, 61, 36, 46, 37, 96, 80, 53, 51, 68, 90,
           64, 81, 66, 67, 80, 37, 92, 67, 64, 31, 94, 45, 80, 28, 76, 29, 64, 38, 48, 40, 29, 44, 81, 35,
           51, 48, 67, 24, 46, 38, 76, 22, 30, 67, 45, 41, 29, 41, 79, 21, 25, 90, 62, 34, 73, 50, 79, 66,
           59, 42, 90, 79, 70, 66, 80, 35, 62, 98, 97, 37, 32, 75, 91, 91, 48, 26, 23, 32, 100, 46, 29, 26]
    y4 = [29, 26, 83, 82, 92, 95, 87, 63, 57, 100, 63, 65, 81, 46, 42, 95, 90, 80, 53, 27, 84, 40, 22, 97,
           20, 73, 63, 95, 46, 42, 47, 40, 26, 88, 49, 24, 92, 87, 68, 95, 34, 82, 84, 43, 54, 73, 66, 32,
           62, 48, 99, 90, 86, 28, 25, 25, 89, 67, 96, 35, 33, 70, 40, 59, 32, 94, 34, 86, 35, 45, 25, 76,
           80, 42, 91, 44, 91, 97, 60, 29, 45, 37, 61, 54, 78, 56, 74, 74, 45, 21, 96, 37, 75, 100, 58, 84,
           85, 56, 54, 71, 52, 79, 43, 35, 27, 70, 31, 47, 35, 26, 30, 97, 90, 80, 58, 60, 73, 46, 71, 39]
    y5 = [42, 98, 27, 21, 71, 71, 78, 76, 57, 24, 91, 84, 35, 25, 77, 96, 97, 89, 30, 86, 81, 39, 75, 66,
           85, 36, 60, 56, 50, 75, 75, 37, 87, 95, 21, 99, 42, 57, 31, 37, 42, 40, 69, 91, 45, 97, 84, 90,
           52, 43, 68, 53, 37, 65, 79, 73, 92, 87, 20, 20, 73, 42, 52, 20, 24, 76, 71, 72, 21, 21, 82, 92,
           78, 87, 50, 41, 31, 73, 89, 59, 88, 40, 71, 69, 45, 57, 49, 68, 84, 32, 69, 77, 92, 98, 57, 39,
           32, 23, 99, 91, 48, 21, 70, 43, 73, 69, 65, 57, 67, 28, 84, 42, 61, 92, 82, 34, 74, 55, 60, 69]

    weights1.sort()
    weights2.sort()
    weights3.sort()
    weights4.sort()
    weights5.sort()
    y1.sort()
    y2.sort()
    y3.sort()
    y4.sort()
    y5.sort()
    print(weights1)
    print(y1)
    print()
    print(weights2)
    print(y2)
    print()
    print(weights3)
    print(y3)
    print()
    print(weights4)
    print(y4)
    print()
    print(weights5)
    print(y5)



    '''data['weights'] = weights
    data['items'] = list(range(len(weights)))
    data['bins'] = data['items']
    data['bin_capacity'] = 150
    return data'''



def main():
    data = create_data_model()

    '''# Create the mip solver with the SCIP backend.
    solver = pywraplp.Solver.CreateSolver('SCIP')

    if not solver:
        return

    # Variables
    # x[i, j] = 1 if item i is packed in bin j.
    x = {}
    for i in data['items']:
        for j in data['bins']:
            x[(i, j)] = solver.IntVar(0, 1, 'x_%i_%i' % (i, j))

    # y[j] = 1 if bin j is used.
    y = {}
    for j in data['bins']:
        y[j] = solver.IntVar(0, 1, 'y[%i]' % j)

    # Constraints
    # Each item must be in exactly one bin.
    for i in data['items']:
        solver.Add(sum(x[i, j] for j in data['bins']) == 1)

    # The amount packed in each bin cannot exceed its capacity.
    for j in data['bins']:
        solver.Add(
            sum(x[(i, j)] * data['weights'][i] for i in data['items']) <= y[j] *
            data['bin_capacity'])

    # Objective: minimize the number of bins used.
    solver.Minimize(solver.Sum([y[j] for j in data['bins']]))

    status = solver.Solve()

    if status == pywraplp.Solver.OPTIMAL:
        num_bins = 0
        for j in data['bins']:
            if y[j].solution_value() == 1:
                bin_items = []
                bin_weight = 0
                for i in data['items']:
                    if x[i, j].solution_value() > 0:
                        bin_items.append(i)
                        bin_weight += data['weights'][i]
                if bin_items:
                    num_bins += 1
                    print('Bin number', j)
                    print('  Items packed:', bin_items)
                    print('  Total weight:', bin_weight)
                    print()
        print()
        print('Number of bins used:', num_bins)
        print('Time = ', solver.WallTime(), ' milliseconds')
    else:
        print('The problem does not have an optimal solution.')'''


if __name__ == '__main__':
    main()